from kivy.app import App
from kivy.uix.label import Label
from kivy.uix.button import Button
from kivy.uix.gridlayout import GridLayout
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.textinput import TextInput

import openai

openai.api_key = ('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')

def get_completion(prompt, model="gpt-3.5-turbo"):
    messages = [{"role": "user", "content": prompt}]
    response = openai.ChatCompletion.create(
        model=model,
        messages=messages,
        temperature=0.5, # this is the degree of randomness of the model's output
    )
    return response.choices[0].message["content"]

class MainMenu(Screen):
    def __init__(self, **kwargs):
        super(MainMenu, self).__init__(**kwargs)
        crisis_button = Button(text='SYTUACJA KRYZYSOWA',
                               size_hint=(0.5, 0.4),
                               pos_hint={'x': 0.25, 'y': 0.05})
        crisis_button.bind(on_press=self.on_crisis_button_press)
        self.add_widget(crisis_button)
        unsure_button = Button(text='NIE WIEM',
                               size_hint=(0.5, 0.4),
                               pos_hint={'x': 0.25, 'y': 0.5})
        unsure_button.bind(on_press=self.on_unsure_button_press)
        self.add_widget(unsure_button)
        help_button = Button(text='DZWOŃ PO POMOC',
                      size_hint=(0.2, 0.2),
                      pos_hint={'x': 0.8, 'y': 0.8})
        help_button.bind(on_press=self.on_help_button_press)
        self.add_widget(help_button)
        info_button = Button(text='PERSONAL INFO',
                     size_hint=(0.2, 0.2),
                     pos_hint = {'x':0.8, 'y': 0.6})
        info_button.bind(on_press=self.on_info_button_press)
        self.add_widget(info_button)

    def on_crisis_button_press(self, instance):
        if instance.text == 'SYTUACJA KRYZYSOWA':
            self.manager.current = 'question_screen'

    def on_info_button_press(self, instance):
        # Handle the "UZUPEŁNIJ INFORMACJE" button press
        print('Going to crisis screen')

    def on_unsure_button_press(self, instance):
        # Handle the "NIE WIEM" button press
        print('Going to unsure screen')

    def on_help_button_press(self, instance):
        # Handle the "DZWOŃ PO POMOC" button press
        print('Calling for help')    

class QuestionScreen(Screen):
    def __init__(self, **kwargs):
        super(QuestionScreen, self).__init__(**kwargs)
        layout = GridLayout(cols=1, rows=21)

        question1 = Label(text='Jaką substancję zażyłeś?')
        layout.add_widget(question1)
        self.question1_input = TextInput()
        layout.add_widget(self.question1_input)

        question2 = Label(text='Jeśli brałeś lub piłeś coś jeszcze, napisz co.')
        layout.add_widget(question2)
        self.question2_input = TextInput()
        layout.add_widget(self.question2_input)

        question3 = Label(text='Ile substancji spożyłeś?')
        layout.add_widget(question3)
        self.question3_input = TextInput()
        layout.add_widget(self.question3_input)

        question4 = Label(text='W jakim otoczeniu się znajdujesz?')
        layout.add_widget(question4)
        self.question4_input = TextInput()
        layout.add_widget(self.question4_input)

        question5 = Label(text='Jestes sam czy są z Tobą ludzie?')
        layout.add_widget(question5)
        self.question5_input = TextInput()
        layout.add_widget(self.question5_input)

        question6 = Label(text='Ile czasu minęło od zażycia?')
        layout.add_widget(question6)
        self.question6_input = TextInput()
        layout.add_widget(self.question6_input)


        question7 = Label(text='Napisz który, jeli odczuwasz któreś z poniższych stanów emocjonalnych: Lęk, niepokój, depresja, smutek, złość, agresja, dezorientacja, paranoja')
        layout.add_widget(question7)
        self.question7_input = TextInput()
        layout.add_widget(self.question7_input)

        question8 = Label(text='Napisz który, jeśli odczuwasz któreś z poniższych stanów fizycznych? Szybsze bicie serca, nudności, wymioty, uczucie nudności, nie mogę zasnąć, zwiększone ciśnienie, zaburzenia mowy, zaburzenia pamięci, zaburzenia koncentracji, zaburzenia równowagi, ból wątroby, niedowład rąk, drżenie ciała, drgawki, chwilowe utraty świadomości')
        layout.add_widget(question8)
        self.question8_input = TextInput()
        layout.add_widget(self.question8_input)

        question9 = Label(text='Czy odczuwasz jakieś inne stany emocjonalne lub fizyczne? Napisz jakie')
        layout.add_widget(question9)
        self.question9_input = TextInput()
        layout.add_widget(self.question9_input)

        submit_button = Button(text='Submit')
        submit_button.bind(on_press=self.submit_answers)
        layout.add_widget(submit_button)

        self.add_widget(layout)

    def submit_answers(self, instance):
        # Get the user's responses from the text input fields
        inputs = ('zażyłem ' + self.question1_input.text + ',' +
                  " dodatkowo brałem " + self.question2_input.text + ',' +
                  " zażyłem to w ilości " + self.question3_input.text + ',' +
                  " jestem w " + self.question4_input.text + ',' +
                  ' jestem z' + self.question5_input.text + ',' +
                  " od zażycia minęło " + self.question6_input.text + ',' +
                  " odczuwam " + self.question7_input.text + ',' +
                  " odczuwam " + self.question8_input.text + ', ' +
                  self.question9_input.text)

        # Print the user's responses to the console
        print(inputs)
        
        text = inputs

        prompt1 = f"""
        Jesteś specjalistą do którego zgłasza się pacjent który wymaga porady, doskonale znasz się na substancjach psychoaktywnych i ich efektach. \
        Informacja o stanie pacjenta oddzielona jest potrójnym apostrofem:
        '''{text}'''
        Na podstawie powyższego opisu stanu pacjenta dostarcz krótkiej instrukcji z zaleceniami działania w celu polepszenia stanu psychofizycznego doraźnie, bez udawania się do lekarza. \
        W wypowiedzi zawrzyj jedynie instrukcję dla osoby w formie prostych do realizacji punktów. \
        Nie zdradzaj swojej tożsamości w wiadomości, pozostaw ją bezosobową. \
        Zastanów się nad swoją odpowiedzią, biorąc pod uwagę jakie substancje zażyła osoba, oraz swoją wiedzę specjalistyczną. \
        """
        response = get_completion(prompt1)
        print(response)

class DUHA(App):
    def build(self):
        screen_manager = ScreenManager()
        screen_manager.add_widget(MainMenu(name='main_menu'))
        screen_manager.add_widget(QuestionScreen(name='question_screen'))
        return screen_manager

if __name__ == '__main__':
    DUHA().run()
